ARG UBUNTU_VERSION=22.04
FROM docker.io/ubuntu:${UBUNTU_VERSION}

ARG COMPILER_VERSION

# Install dependencies
RUN sed -i 's|http://archive.ubuntu.com/ubuntu/|http://mirror.math.princeton.edu/pub/ubuntu/|g' /etc/apt/sources.list
RUN apt-get -y update && apt-get -y install software-properties-common
RUN add-apt-repository ppa:ubuntu-toolchain-r/test -y && apt-get -y update
RUN apt-get -y install cmake \
                        build-essential \
                        pkg-config \
                        libpython3-dev \
                        python3-numpy \
                        libicu-dev \
                        ninja-build \
                        libboost-all-dev \
                        libgeographiclib-dev

# Install clang
# (ipv4|ha).pool.sks-keyservers.net is the SKS GPG global keyserver pool
# ipv4 avoids potential timeouts because of crappy IPv6 infrastructure
# 15CF4D18AF4F7421 is the GPG key for the LLVM apt repository
# This key is not in the keystore by default for Ubuntu so we need to add it.
ARG LLVM_KEY=15CF4D18AF4F7421
RUN gpg --keyserver keyserver.ubuntu.com --recv-key ${LLVM_KEY} || gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-key ${LLVM_KEY}
RUN gpg -a --export ${LLVM_KEY} | apt-key add -
# LLVM (clang) 9/14 is not in Bionic's repositories so we add the official LLVM repository.
RUN add-apt-repository "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main"
# LLVM (clang) 9/14 is not in 22.04 (jammy)'s repositories so we add the official LLVM repository.
RUN add-apt-repository "deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy main"

RUN apt-get update
RUN apt-get install -y clang-${COMPILER_VERSION} \
                        mold \
                        libtbb-dev

ENV CC="clang-${COMPILER_VERSION}"
ENV CXX="clang++-${COMPILER_VERSION}"
ENV LDFLAGS="-fuse-ld=mold"
ENV CMAKE_EXE_LINKER_FLAGS="-fuse-ld=mold"
ENV CMAKE_SHARED_LINKER_FLAGS="-fuse-ld=mold"

# Install Eigen and Metis (needed for some tests)
RUN apt-get update && apt-get install -y libeigen3-dev libmetis-dev

WORKDIR /gtsam

# Build GTSAM and run tests
ENTRYPOINT ["bash", ".github/scripts/unix.sh", "-t"]

